class Solution:
    def shortestSubarray(self, nums: List[int], k: int) -> int:
        n= len(nums)
        deque=collections.deque()
        preSum=[0]*n
        preSum[0]=nums[0]

        mini=float(inf)

        for i in range(1,n):
            preSum[i]=preSum[i-1]+nums[i]
        
        deque.append([0,-1])
        for i,num in enumerate(preSum):

            while deque and deque[-1][0]>=num:
                deque.pop()
            
            deque.append([num,i])

            while deque and deque[0][0] <= preSum[i]-k:
                mini=min(mini,i-deque[0][1])
                deque.popleft()

        
        return mini if mini!=float(inf) else -1
